CREATE TABLE sales (
  customer_id VARCHAR(1),
  order_date DATE,
  product_id INTEGER
);

INSERT INTO sales
  (customer_id, order_date, product_id)
VALUES
  ('A', '2021-01-01', '1'),
  ('A', '2021-01-01', '2'),
  ('A', '2021-01-07', '2'),
  ('A', '2021-01-10', '3'),
  ('A', '2021-01-11', '3'),
  ('A', '2021-01-11', '3'),
  ('B', '2021-01-01', '2'),
  ('B', '2021-01-02', '2'),
  ('B', '2021-01-04', '1'),
  ('B', '2021-01-11', '1'),
  ('B', '2021-01-16', '3'),
  ('B', '2021-02-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-07', '3');
 

CREATE TABLE menu (
  product_id INTEGER,
  product_name VARCHAR(5),
  price INTEGER
);

INSERT INTO menu
  (product_id, product_name, price)
VALUES
  ('1', 'sushi', '10'),
  ('2', 'curry', '15'),
  ('3', 'ramen', '12');
  

CREATE TABLE members (
  customer_id VARCHAR(1),
  join_date DATE
);

INSERT INTO members
  (customer_id, join_date)
VALUES
  ('A', '2021-01-07'),
  ('B', '2021-01-09');



-- 1. What is the total amount each customer spent at the restaurant?

  SELECT s.customer_id, SUM(mu.price) AS Total_Spent
  FROM [Danny].[dbo].[sales] AS s
  INNER JOIN [Danny].[dbo].[menu] AS mu
  ON s.product_id = mu.product_id
  GROUP BY s.customer_id;

  -- 2. How many days has each customer visited the restaurant?

  SELECT s.customer_id, COUNT(DISTINCT s.order_date) AS NumberofVisits
  FROM [Danny].[dbo].[sales] AS s
  GROUP BY s.customer_id;

  -- 3. What was the first item from the menu purchased by each customer?
  
  --First pulling complete table to look at data

  SELECT s.customer_id, MIN(s.order_date) AS OrderDate, mu.product_name
  FROM [Danny].[dbo].[sales] AS s
  INNER JOIN [Danny].[dbo].[menu] AS mu
  ON s.product_id = mu.product_id
  GROUP BY s.customer_id, mu.product_name
  ORDER BY s.customer_id, MIN(s.order_date);
  
  -- Using CTE to number order dates

WITH ranking_items AS (
 SELECT [customer_id], [product_id],
 ROW_NUMBER() OVER (PARTITION BY [customer_id] ORDER BY [order_date]) AS RN
 FROM [Danny].[dbo].[sales] 
)

-- Selecting from CTE to find first item purchased by customer

SELECT [customer_id] [customer_id], [product_name] AS 'first_item_purchased'
FROM ranking_items R INNER JOIN [dbo].[menu] M
ON R.[product_id]=M.[product_id]
WHERE RN=1

  -- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?

 SELECT TOP 1 COUNT(s.order_date) AS NumTimesOrdered, mu.product_name
 FROM [Danny].[dbo].[sales] AS s
 INNER JOIN [Danny].[dbo].[menu] AS mu
 ON s.[product_id]=mu.[product_id]
 GROUP BY mu.product_name
 ORDER BY COUNT(s.order_date) DESC;

 --5. Which item was the most popular for each customer?

 SELECT s.customer_id, COUNT(s.order_date) AS NumTimesOrdered, mu.product_name
 FROM [Danny].[dbo].[sales] AS s
 INNER JOIN [Danny].[dbo].[menu] AS mu
 ON s.[product_id]=mu.[product_id]
 GROUP BY s.customer_id, mu.product_name
 ORDER BY s.customer_id, COUNT(s.order_date) DESC;

 WITH most_popular AS
    (
      	SELECT s.customer_id AS Customer, COUNT(s.product_id) AS NumOrder, mu.product_name AS Item,
    		DENSE_RANK() OVER (PARTITION BY s.customer_id
                        ORDER BY COUNT(s.product_id) DESC) AS MostPopular
    	FROM [Danny].[dbo].[sales] AS s
    	INNER JOIN [Danny].[dbo].[menu] AS mu
    		ON s.product_id = mu.product_id
    	GROUP BY s.customer_id, mu.product_name
      )

      SELECT Customer, Item
      FROM most_popular
      WHERE MostPopular = 1;

--6. Which item was purchased first by the customer after they became a member?

SELECT s.customer_id, mu.product_name, me.join_date, s.order_date
FROM [Danny].[dbo].[sales] AS s 
INNER JOIN [Danny].[dbo].[members] AS me 
ON s.customer_id = me.customer_id
INNER JOIN [Danny].[dbo].[menu] AS mu
ON s.product_id = mu.product_id
WHERE s.order_date > me.join_date
ORDER BY order_date

WITH ranking AS (
 SELECT s.customer_id, s.product_id,
 ROW_NUMBER() OVER (PARTITION BY s.customer_id ORDER BY s.order_date) AS RN
 FROM [Danny].[dbo].[sales] AS s
 INNER JOIN [Danny].[dbo].[members] AS me
 ON s.customer_id = me.customer_id
 WHERE s.order_date > me.join_date
)

SELECT r.customer_id, mu.product_name 
FROM ranking AS r 
INNER JOIN [Danny].[dbo].[menu] AS mu
ON r.[product_id]=mu.[product_id]
WHERE RN=1


--7. Which item was purchased just before the customer became a member?

SELECT s.customer_id, mu.product_name, me.join_date, s.order_date
FROM [Danny].[dbo].[sales] AS s 
INNER JOIN [Danny].[dbo].[members] AS me 
ON s.customer_id = me.customer_id
INNER JOIN [Danny].[dbo].[menu] AS mu
ON s.product_id = mu.product_id
WHERE s.order_date < me.join_date
ORDER BY order_date


WITH ordering AS (
 SELECT s.customer_id, s.product_id,
 DENSE_RANK() OVER (PARTITION BY s.customer_id ORDER BY s.order_date DESC) AS RN
 FROM [Danny].[dbo].[sales] AS s
 INNER JOIN [Danny].[dbo].[members] AS me
 ON s.customer_id = me.customer_id
 WHERE s.order_date < me.join_date
)

SELECT o.customer_id, mu.product_name 
FROM ordering AS o 
INNER JOIN [Danny].[dbo].[menu] AS mu
ON o.[product_id]=mu.[product_id]
WHERE RN=1

--8. What is the total items and amount spent for each member before they became a member?


SELECT s.customer_id, COUNT(s.product_id) AS NumItems, SUM(mu.price) AS TotalSpent
FROM [Danny].[dbo].[sales] AS s
INNER JOIN [Danny].[dbo].[menu] AS mu
ON s.product_id = mu.product_id
INNER JOIN [Danny].[dbo].[members] AS me
ON s.customer_id = me.customer_id
WHERE s.order_date < me.join_date
GROUP BY s.customer_id;

-- 9. If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

SELECT s.customer_id,
	SUM(
	CASE
	WHEN s.product_id = 1 THEN mu.price * 20
	ELSE mu.price * 10
	END) AS Total_Points
FROM [Danny].[dbo].[sales] AS s
INNER JOIN [Danny].[dbo].[menu] AS mu
ON s.product_id = mu.product_id
GROUP BY customer_id

--10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?

SELECT me.customer_id, me.join_date
FROM [Danny].[dbo].[members] AS me

SELECT
	s.customer_id,
   SUM(
      CASE
      	WHEN (s.order_date >= me.join_date) 
      		AND (s.order_date < DATEADD(day, 6, me.join_date)) THEN mu.price * 20
      	WHEN product_name = 'sushi' THEN mu.price * 20
      	ELSE mu.price * 10
      	END
      ) AS TotalPoints
FROM [Danny].[dbo].[sales] AS s
INNER JOIN [Danny].[dbo].[menu] AS mu
ON s.product_id = mu.product_id
INNER JOIN [Danny].[dbo].[members] AS me
ON s.customer_id = me.customer_id
WHERE order_date <= '2021-01-31'
GROUP BY s.customer_id;
